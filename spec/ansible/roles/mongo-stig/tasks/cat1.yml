---
# - name: "HIGH | SV-252139 | If passwords are used for authentication, MongoDB must transmit only encrypted representations of passwords."
#   blockinfile:
#     path: "{{ mongod_config_path }}"
#     marker: "#Rule ID SV-252139"
#     prepend_newline: true
#     insertafter: "^net:"
#     block: | #need the ID as a placeholder for the space
#       #
#         tls:
#           mode: requireTLS
#           certificateKeyFile: /etc/ssl/mongodb.pem
#           CAFile: /etc/ssl/caToValidateClientCertificates.pem
#           allowInvalidCertificates: false
#           allowConnectionsWithoutCertificates: false
#   register: result
#   changed_when: no
#   ignore_errors: true
#   tags:
#     - cat1
#     - high
#     - SV-252139

##### ENTERPRISE ONLY
# - name: "HIGH | SV-252146 | MongoDB must use NIST FIPS 140-2 or 140-3 validated cryptographic modules for cryptographic operations."
#   command: true
#   register: result
#   
#   changed_when: no
#   ignore_errors: true
#   tags:
#     - cat1
#     - high
#     - SV-252146

# - name: Check if 'security:' exists and is not commented out
#   shell: "grep -P '^security:' {{ mongod_config_path }} || true"
#   register: security_check
#   changed_when: false
#   ignore_errors: true
#   tags:
#     - SV-252149

# - name: "HIGH | SV-252149 | MongoDB must integrate with an organization-level authentication/access mechanism providing account management and automation for all users, groups, roles, and any other principals. | Security block does not exist."
#   blockinfile:
#     path: "{{ mongod_config_path }}"
#     marker: "#Rule ID SV-252149"
#     prepend_newline: true
#     insertafter: "^#security:"
#     block: |
#       security:
#         authorization: enabled
#   when: security_check.stdout == ""      
#   register: result
#   changed_when: no
#   ignore_errors: true
#   tags:
#     - cat1
#     - high
#     - SV-252149

# - name: "HIGH | SV-252149 | MongoDB must integrate with an organization-level authentication/access mechanism providing account management and automation for all users, groups, roles, and any other principals. | Security block exists."
#   blockinfile:
#     path: "{{ mongod_config_path }}"
#     marker: "#Rule ID SV-252149"
#     prepend_newline: true
#     insertafter: "^security:"
#     block: |
#       #
#         authorization: enabled
#   when: security_check.stdout != ""      
#   register: result
#   changed_when: no
#   ignore_errors: true
#   tags:
#     - cat1
#     - high
#     - SV-252149

# - name: "HIGH | SV-252150 | MongoDB must enforce approved authorizations for logical access to information and system resources in accordance with applicable access control policies."
#   community.mongodb.mongodb_shell: #works but unsure what output is
#     db: "database"
#     eval: "db.getRoles({rolesInfo: 1, showPrivileges:true, showBuiltinRoles: true })"
#   register: result
#   changed_when: no
#   ignore_errors: true
#   tags:
#     - cat1
#     - high
#     - SV-252150

# - name: "HIGH | SV-252152 | MongoDB software installation account must be restricted to authorized users."
#   command: true
#   register: result
#   changed_when: no
#   ignore_errors: true
#   tags:
#     - cat1
#     - high
#     - SV-252152

# - name: "HIGH | SV-252158 | If passwords are used for authentication, MongoDB must implement LDAP or Kerberos for authentication to enforce the DoD standards for password complexity and lifetime."
#   command: true
#   register: result
#   changed_when: no
#   ignore_errors: true
#   tags:
#     - cat1
#     - high
#     - SV-252158

# - name: "HIGH | SV-252159 | If passwords are used for authentication, MongoDB must store only hashed, salted representations of passwords."
#   #THERE IS A PART TWO THATS NOT COMPLETED
#   blockinfile:
#     path: "{{ mongod_config_path }}"
#     marker: "#Rule ID SV-252159"
#     prepend_newline: true
#     insertafter: "EOF"
#     block: |
#       setParameter:
#         authenticationMechanisms: SCRAM-SHA-256
#     state: present
#   register: result
#   changed_when: no
#   ignore_errors: true
#   tags:
#     - cat1
#     - high
#     - SV-252159

# - name: "HIGH | SV-252159 | If passwords are used for authentication, MongoDB must store only hashed, salted representations of passwords."
#   #the command for part two of this Rule ID no longer exists in recent versions of mongo
#   command: true 
#   register: result
#   changed_when: no
#   ignore_errors: true
#   tags:
#     - cat1
#     - high
#     - SV-252159

# - name: "HIGH | SV-252160 | MongoDB must enforce authorized access to all PKI private keys stored/utilized by MongoDB."
#   command: true
#   register: result
#   changed_when: no
#   ignore_errors: true
#   tags:
#     - cat1
#     - high
#     - SV-252160


# - name: "HIGH | SV-252162 | MongoDB must obscure feedback of authentication information during the authentication process to protect the information from possible exploitation/use by unauthorized individuals."
#   command: true
#   register: result
#   changed_when: no
#   ignore_errors: true
#   tags:
#     - cat1
#     - high
#     - SV-252162

# - name: "HIGH | SV-252165 | MongoDB must protect the confidentiality and integrity of all information at rest."
#   command: true
#   register: result
#   changed_when: no
#   ignore_errors: true
#   tags:
#     - cat1
#     - high
#     - SV-252165

# - name: "HIGH | SV-252184 | MongoDB products must be a version supported by the vendor."
#   command: true
#   register: result
#   changed_when: no
#   ignore_errors: true
#   tags:
#     - cat1
#     - high
#     - SV-252184

- name: Print the contents of mongod.conf
  command: cat "{{ mongod_config_path }}"
  register: mongod_conf_content

- name: Display contents of mongod.conf
  debug:
    msg: "{{ mongod_conf_content.stdout }}"
