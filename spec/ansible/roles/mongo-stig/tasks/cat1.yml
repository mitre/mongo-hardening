---
- name: "MEDIUM | SV-252157 | MongoDB must uniquely identify and authenticate organizational users (or processes acting on behalf of organizational users)."
  block:
    - name: "MEDIUM | SV-252157 | Enable authorization in MongoDB configuration"
      yedit:
        src: "{{ mongod_config_path }}"
        key: security.authorization
        value: enabled

    - name: Extract _id fields from MongoDB user data
      set_fact:
        user_ids: "{{ user_ids | default([]) + [item._id] }}"
      loop: "{{ user_list.stdout }}"

    - name: Display all _id fields
      debug:
        var: user_ids

    - name: Filter out users not in mongo_users
      set_fact:
        non_mongo_users: "{{ non_mongo_users | default([]) + [item] }}"
      loop: "{{ user_ids }}"
      when: item not in mongo_users

    - name: Display all non_mongo_users fields
      debug:
        var: non_mongo_users


  ignore_errors: false
  tags:
    - cat2
    - medium
    - SV-252157

# - name: "MEDIUM | SV-252157 | MongoDB must uniquely identify and authenticate organizational users (or processes acting on behalf of organizational users)."
#   block:
#     - name: "MEDIUM | SV-252157 | Enable authorization in MongoDB configuration"
#       yedit:
#         src: "{{ mongod_config_path }}"
#         key: security.authorization
#         value: enabled

#     - name: Fetch list of databases
#       community.mongodb.mongodb_shell:
#         login_user: "{{ mongo_dba }}"
#         login_password: "{{ mongo_dba_password }}"
#         login_database: "{{ mongo_auth_source }}"
#         login_host: "{{ mongo_host }}"
#         login_port: "{{ mongo_port }}"
#         eval: "db.adminCommand({ listDatabases: 1 })"
#       register: db_list

#     - name: Display the fetched databases
#       debug:
#         var: db_list.transformed_output.databases

#   ignore_errors: true
#   tags:
#     - cat2
#     - medium
#     - SV-252157

- name: "HIGH | SV-252139 | If passwords are used for authentication, MongoDB must transmit only encrypted representations of passwords."
  yedit:
    src: "{{ mongod_config_path }}"
    edits:
    - key: net.tls.mode
      value: requireTLS
    - key: net.tls.certificateKeyFile
      value: "{{ certificate_key_file_dest }}"
    - key: net.tls.CAFile
      value: "{{ ca_file_dest }}"
    - key: net.tls.allowInvalidCertificates
      value: false
    - key: net.tls.allowConnectionsWithoutCertificates
      value: false
  ignore_errors: true
  when: enterprise_edition
  tags:
    - cat1
    - high
    - SV-252139
    - enterprise

- name: "HIGH | SV-252146 | MongoDB must use NIST FIPS 140-2 or 140-3 validated cryptographic modules for cryptographic operations."
  yedit:
      src: "{{ mongod_config_path }}"
      key: net.tls.FIPSMode
      value: true
  ignore_errors: true
  when: enterprise_edition and fips_mode
  tags:
    - cat1
    - high
    - SV-252146
    - enterprise
    - fips

- name: "HIGH | SV-252149 | MongoDB must integrate with an organization-level authentication/access mechanism providing account management and automation for all users, groups, roles, and any other principals."
  yedit:
      src: "{{ mongod_config_path }}"
      key: security.authorization
      value: enabled
  ignore_errors: true
  when: enterprise_edition
  tags:
    - cat1
    - high
    - SV-252149
    - enterprise

##### MANUAL
# - name: "HIGH | SV-252150 | MongoDB must enforce approved authorizations for logical access to information and system resources in accordance with applicable access control policies."
#   commant: true
#   ignore_errors: true
#   tags:
#     - cat1
#     - high
#     - SV-252150


##### MANUAL
# - name: "HIGH | SV-252152 | MongoDB software installation account must be restricted to authorized users."
#   command: true
#   ignore_errors: true
#   tags:
#     - cat1
#     - high
#     - SV-252152

##### MANUAL
# - name: "HIGH | SV-252158 | If passwords are used for authentication, MongoDB must implement LDAP or Kerberos for authentication to enforce the DoD standards for password complexity and lifetime."
#   command: true
#   ignore_errors: true
#   tags:
#     - cat1
#     - high
#     - SV-252158

- name: "HIGH | SV-252159 | If passwords are used for authentication, MongoDB must store only hashed, salted representations of passwords."
  yedit:
      src: "{{ mongod_config_path }}"
      key: setParameter.authenticationMechanisms
      value: "{{ authentication_mechanism | join(',') }}"
  ignore_errors: true
  when: enterprise_edition
  tags:
    - cat1
    - high
    - SV-252159
    - enterprise

- name: "HIGH | SV-252160 | MongoDB must enforce authorized access to all PKI private keys stored/utilized by MongoDB."
  block:
    - name: "HIGH | SV-252160 | MongoDB must enforce authorized access to all PKI private keys stored/utilized by MongoDB. | Certificate Key File"
      ansible.builtin.file: 
        path: "{{ certificate_key_file_dest }}"
        owner: "{{ mongo_owner }}"
        group: "{{ mongo_group }}"
        mode: "{{ mongo_permissions }}"
    - name: "HIGH | SV-252160 | MongoDB must enforce authorized access to all PKI private keys stored/utilized by MongoDB. | CA File"
      ansible.builtin.file: 
        path: "{{ ca_file_dest }}"
        owner: "{{ mongo_owner }}"
        group: "{{ mongo_group }}"
        mode: "{{ mongo_permissions }}"
  when: enterprise_edition
  ignore_errors: true
  tags:
    - cat1
    - high
    - SV-252160
    - enterprise

##### MANUAL
# - name: "HIGH | SV-252162 | MongoDB must obscure feedback of authentication information during the authentication process to protect the information from possible exploitation/use by unauthorized individuals."
#   command: true
#   ignore_errors: true
#   tags:
#     - cat1
#     - high
#     - SV-252162

# - name: "HIGH | SV-252165 | MongoDB must protect the confidentiality and integrity of all information at rest."
#   command: true
#   ignore_errors: true
#   when: enterprise_edition && encryption_at_rest
#   tags:
#     - cat1
#     - high
#     - SV-252165
#     - enterprise

##### MANUAL
# - name: "HIGH | SV-252184 | MongoDB products must be a version supported by the vendor."
#   command: true
#   ignore_errors: true
#   tags:
#     - cat1
#     - high
#     - SV-252184

- name: Print the contents of mongod.conf
  command: cat "{{ mongod_config_path }}"
  register: mongod_conf_content

- name: Display contents of mongod.conf
  debug:
    msg: "{{ mongod_conf_content.stdout }}"
