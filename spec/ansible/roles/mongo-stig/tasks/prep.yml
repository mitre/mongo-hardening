---
- name: "Check or create {{ mongod_config_path }} file"
  ansible.builtin.stat:
    path: "{{ mongod_config_path }}"
  register: conf
  changed_when: no
  ignore_errors: true
  tags:
    - prep

- name: Copy file with owner and permissions
  ansible.builtin.copy:
    src: files/conf.template
    dest: "{{ mongod_config_path }}"
    owner: "{{ mongo_owner }}"
    group: "{{ mongo_group }}"
    mode: '755'
  when: conf.stat.exists == false
  tags:
    - prep

- name: Get list of databases
  ansible.builtin.command: |
    mongosh "mongodb://localhost:27017/" --quiet --eval "EJSON.stringify(db.adminCommand('listDatabases'))"
  register: database_list

- name: Display contents of mongod.conf
  debug:
    msg: "{{ database_list.stdout }}"

# - name: Create MongoDB admin user
#   ansible.builtin.command: |
#     mongosh "mongodb://localhost:27017/" --quiet --eval "db.getSiblingDB(\"admin\").createUser({user: \"admin\", pwd: \"admin\", roles: [{role: \"userAdminAnyDatabase\", db: \"admin\"}]});"
#   register: database_list

##### DOES NOT WORK 
- name: Create MongoDB admin user
  community.mongodb.mongodb_shell:
    login_host: "{{ mongo_host }}"
    login_port: "{{ mongo_port }}"
    eval: "db.getSiblingDB('admin').createUser({user: 'admin', pwd: 'admin', roles: [{role: 'userAdminAnyDatabase', db: 'admin'}]})"
  tags:
    - prep


# get these and register as fact minus what the user said shouldnt be hardened
# json query filter
# get databases command 
# get roles
# get users

##create some roles and users for testing
