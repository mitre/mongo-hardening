---
- name: "Check or create {{ mongod_config_path }} file"
  ansible.builtin.stat:
    path: "{{ mongod_config_path }}"
  register: conf
  changed_when: no
  tags:
    - prep

- name: Copy file with owner and permissions
  ansible.builtin.copy:
    src: files/conf.template
    dest: "{{ mongod_config_path }}"
    owner: "{{ mongo_owner }}"
    group: "{{ mongo_group }}"
    mode: "{{ mongo_permissions }}"
  when: conf.stat.exists == false
  tags:
    - prep

# - name: Create MongoDB admin user
#   ansible.builtin.command: |
#     mongosh "mongodb://localhost:27017/" --quiet --eval "db.getSiblingDB('admin').createUser({user: '{{ mongo_dba }}', pwd: '{{ mongo_dba_password }}', roles: [{role: 'root', db: 'admin'}]})"
#   register: database_list
#   ignore_errors: true

- name: Create MongoDB admin user
  community.mongodb.mongodb_user:
    database: admin
    name: admin
    password: admin
    roles: root
    state: present

##### same note as previous get
- name: Get all the users in a database
  ansible.builtin.command: |
    mongosh "mongodb://localhost:27017/test" --quiet --eval "EJSON.stringify(db.getSiblingDB('admin').getUsers())"
  register: users_list
  tags:
    - prep

- name: Display contents of users_list
  debug:
    msg: "{{ users_list.stdout }}"

# get these and register as fact minus what the user said shouldnt be hardened
# create some roles and users for testing
# json query filter
# get databases command 
# get roles
# get users

