---
- name: "Check or create {{ mongod_config_path }} file"
  ansible.builtin.stat:
    path: "{{ mongod_config_path }}"
  register: conf
  changed_when: no

- name: Copy mongod.conf file to container
  ansible.builtin.copy:
    src: files/conf.template
    dest: "{{ mongod_config_path }}"
    owner: "{{ mongo_owner }}"
    group: "{{ mongo_group }}"
    mode: "{{ mongo_permissions }}"
  when: conf.stat.exists == false

- name: Copy certificate key file to container
  ansible.builtin.copy:
    src: "{{ certificate_key_file_src }}"
    dest: "{{ certificate_key_file_dest }}"
    owner: "{{ mongo_owner }}"
    group: "{{ mongo_group }}"
    mode: "{{ mongo_permissions }}"

- name: Copy certificate authority file to container
  ansible.builtin.copy:
    src: "{{ ca_file_src }}"
    dest: "{{ ca_file_dest }}"
    owner: "{{ mongo_owner }}"
    group: "{{ mongo_group }}"
    mode: "{{ mongo_permissions }}"

- name: Create MongoDB admin user
  community.mongodb.mongodb_user:
    database: admin
    name: admin
    password: admin
    roles: root
    state: present

- name: Get all the users in a database
  ansible.builtin.command: |
    mongosh "mongodb://localhost:27017/test" --quiet --eval "EJSON.stringify(db.getSiblingDB('admin').getUsers())"
  register: users_list

- name: Display contents of users_list
  debug:
    msg: "{{ users_list.stdout }}"

- name: Get MongoDB version
  ansible.builtin.command: |
    mongosh "mongodb://localhost:27017/test" --quiet --eval "db.version()"
  register: mongodb_version

- name: Display contents of mongodb_version
  debug:
    msg: "{{ mongodb_version.stdout }}"
    