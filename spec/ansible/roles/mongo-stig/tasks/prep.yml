---
- name: "PREP | Check or create {{ mongod_config_path }} file"
  ansible.builtin.stat:
    path: "{{ mongod_config_path }}"
  register: conf
  changed_when: no

- name: "PREP | Copy mongod.conf file to container"
  ansible.builtin.copy:
    src: files/conf.template
    dest: "{{ mongod_config_path }}"
    owner: "{{ mongo_owner }}"
    group: "{{ mongo_group }}"
    mode: "{{ mongo_permissions }}"
  when: conf.stat.exists == false

- name: "PREP | Copy certificate key file to container"
  ansible.builtin.copy:
    src: "{{ certificate_key_file_src }}"
    dest: "{{ certificate_key_file_dest }}"
    owner: "{{ mongo_owner }}"
    group: "{{ mongo_group }}"
    mode: "{{ mongo_permissions }}"

- name: "PREP | Copy certificate authority file to container"
  ansible.builtin.copy:
    src: "{{ ca_file_src }}"
    dest: "{{ ca_file_dest }}"
    owner: "{{ mongo_owner }}"
    group: "{{ mongo_group }}"
    mode: "{{ mongo_permissions }}"

- name: "PREP | Create MongoDB root user"
  community.mongodb.mongodb_user:
    database: "{{ mongo_auth_source }}"
    name: "{{ mongo_dba }}"
    password: "{{ mongo_dba_password }}"
    roles: root
    state: present

- name: "PREP | Get all the users in a database"
  ansible.builtin.command: |
    mongosh "mongodb://{{ localhost }}:{{ mongo_port }}/admin" --quiet --eval "EJSON.stringify(db.system.users.find().toArray())"
  register: user_list

- name: "PREP | Get MongoDB version"
  ansible.builtin.command: |
    mongosh "mongodb://{ localhost }}:{{ mongo_port }}/test" --quiet --eval "db.version()"
  register: mongodb_version
